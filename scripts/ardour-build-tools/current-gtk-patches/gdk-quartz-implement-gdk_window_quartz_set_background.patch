diff --git a/gdk/quartz/GdkQuartzView.c b/gdk/quartz/GdkQuartzView.c
index 26700ff..25bbadc 100644
--- a/gdk/quartz/GdkQuartzView.c
+++ b/gdk/quartz/GdkQuartzView.c
@@ -621,7 +621,14 @@
        */
       [NSGraphicsContext saveGraphicsState];
 
-      [[NSColor windowBackgroundColor] setFill];
+      if (impl->background_color_set)
+        [[NSColor colorWithDeviceRed:impl->background_color.red / 65535.0
+                               green:impl->background_color.green / 65535.0
+                                blue:impl->background_color.blue / 65535.0
+                               alpha:1.0]
+         setFill];
+      else
+        [[NSColor windowBackgroundColor] setFill];
       [NSBezierPath fillRect: rect];
 
       [NSGraphicsContext restoreGraphicsState];
diff --git a/gdk/quartz/gdkwindow-quartz.c b/gdk/quartz/gdkwindow-quartz.c
index 318a171..38c99b4 100644
--- a/gdk/quartz/gdkwindow-quartz.c
+++ b/gdk/quartz/gdkwindow-quartz.c
@@ -1726,6 +1726,22 @@ gdk_window_quartz_set_background (GdkWindow      *window,
   /* FIXME: We could theoretically set the background color for toplevels
    * here. (Currently we draw the background before emitting expose events)
    */
+  GdkWindowImplQuartz *impl;
+  GdkWindowObject *private;
+
+  if (GDK_WINDOW_DESTROYED (window))
+    return;
+
+  private = GDK_WINDOW_OBJECT (window);
+  impl = GDK_WINDOW_IMPL_QUARTZ (private->impl);
+
+  if (color)
+    {
+      impl->background_color = *color;
+      impl->background_color_set = TRUE;
+    }
+  else
+    impl->background_color_set = FALSE;
 }
 
 static void
diff --git a/gdk/quartz/gdkwindow-quartz.h b/gdk/quartz/gdkwindow-quartz.h
index 4a0e27a..ed9dfe3 100644
--- a/gdk/quartz/gdkwindow-quartz.h
+++ b/gdk/quartz/gdkwindow-quartz.h
@@ -60,6 +60,10 @@ struct _GdkWindowImplQuartz
   GList *sorted_children;
 
   GdkRegion *needs_display_region;
+
+  GdkColor background_color;
+
+  guint background_color_set : 1;
 };
  
 struct _GdkWindowImplQuartzClass 
